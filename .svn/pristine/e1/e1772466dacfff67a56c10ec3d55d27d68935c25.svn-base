using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using WAREGBOGWMM.Models;
using System.Data;

namespace WAREGBOGWMM.App_Code
{
    public class Utilerias
    {
        internal string mCSH2H()
        {
            string Key = "";
            try
            {
                Key = System.Configuration.ConfigurationManager.AppSettings["dbalias"];

                if (string.IsNullOrEmpty(Key))
                    Key = "db_h2h";
            }
            catch
            {
                try
                {
                    Key = "db_h2h";
                }
                catch { throw new Exception("key no found"); }
            }
            return Key;
        }

        //Crear usuario
        internal void CreateUser(Usuario user, ref string error)
        {
            new ConexionBD().mInsertUsuario(user, "edwin.ruano", ref error);
        }


        //Modificar usuario
        internal void UpdateUser(Usuario user, ref string error)
        {
            new ConexionBD().mUpdateUsuario(user, "edwin.ruano", ref error);
        }

        //Alta/Baja usuario
        internal void UpDownUser(Usuario user, ref string error)
        {
            new ConexionBD().mEstateUsuario(user, ref error);
        }

        //Consultar usuario
        internal DataTable QueryUser(Usuario user, ref string error)
        {
            new ConexionBD().mQueryUsuario(user, ref error);
            return new DataTable();
        }

        //Crear rol
        internal void CreateRol(Rol uRol, ref string error)
        {
            new ConexionBD().mInsertRol(uRol, "edwin.ruano", ref error);
        }

        //Modificar rol
        internal void UpdateRol(Rol urol, ref string error)
        {
            new ConexionBD().mUpdateRol(urol, "edwin.ruano", ref error);
        }

        //Habilitar/Inhabilitar rol
        internal void UpDownRol(Rol uRol, ref string error)
        {
            new ConexionBD().mEstateRol(uRol, "edwin.ruano", ref error);
        }

        //Crear permiso
        internal void CreatePermiso(Permiso permit, ref string error)
        {
            new ConexionBD().mCreatePermiso(permit, "edwin.ruano", ref error);
        }

        //Modificar permiso
        internal void UpdatePermiso(Permiso permit, ref string error)
        {
            new ConexionBD().mUpdatePermiso(permit, "edwin.ruano", ref error);
        }

        //Alta/Baja permiso
        internal void UpDownPermiso(Permiso permit, ref string error)
        {
            new ConexionBD().mEstatePermiso(permit, "edwin.ruano", ref error);
        }

        //Reiniciar contraseñas
        internal void RestartPassword(ReinicioContraseña password, ref string error)
        {
            new ConexionBD().mRestartPassword(password, "edwin.ruano", ref error);
        }
    }
}