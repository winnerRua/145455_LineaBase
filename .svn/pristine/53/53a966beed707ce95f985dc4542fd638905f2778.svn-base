using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using WAREGBOGWMM.Models;
using System.Data;

namespace WAREGBOGWMM.App_Code
{
    public class Utilerias
    {
        internal string mCSH2H()
        {
            string Key = "";
            try
            {
                Key = System.Configuration.ConfigurationManager.AppSettings["dbalias"];

                if (string.IsNullOrEmpty(Key))
                    Key = "db_h2h";
            }
            catch
            {
                try
                {
                    Key = "db_h2h";
                }
                catch { throw new Exception("key no found"); }
            }
            return Key;
        }

        //Crear usuario
        internal void CreateUser(Usuario user, ref string error)
        {
            new ConexionBD().mInsertUsuario(user, "edwin.ruano", ref error);
        }


        //Modificar usuario
        internal void UpdateUser(Usuario user, ref string error)
        {
            new ConexionBD().mUpdateUsuario(user, "edwin.ruano", ref error);
        }

        //Alta/Baja usuario
        internal void UpDownUser(Usuario user, ref string error)
        {
            new ConexionBD().mEstateUsuario(user, ref error);
        }

        //Consultar usuario
        internal Usuario QueryUser(Usuario user, ref string error)
        {
            var tabla = new ConexionBD().mQueryUsuario(user, ref error);

            user = (from query in tabla.AsEnumerable()
                               select new Usuario
                               {
                                   nombreCompleto = query.Field<string>("Nombre"),
                                   documento = query.Field<string>("NumeroIdentificacion"),
                                   telefono = query.Field<string>("NumeroDeTelefono"),
                                   correo = query.Field<string>("Email"),
                                   direccion = query.Field<string>("Direccion"),
                                   //estado = query.Field<string>("Estado"),
                                   genero = query.Field<string>("Genero"),
                                   nacimiento = query.Field<string>("FechaNacimiento"),
                                   contraseña = query.Field<string>("Contraseña"),
                                   //rol = query.Field<string>("RolID"),
                                   //pais = query.Field<string>("PaisID")
                               }).FirstOrDefault();
            return user;
        }

        //Crear rol
        internal void CreateRol(Rol uRol, ref string error)
        {
            new ConexionBD().mInsertRol(uRol, "edwin.ruano", ref error);
        }

        //Modificar rol
        internal void UpdateRol(Rol urol, ref string error)
        {
            new ConexionBD().mUpdateRol(urol, "edwin.ruano", ref error);
        }

        //Habilitar/Inhabilitar rol
        internal void UpDownRol(Rol uRol, ref string error)
        {
            new ConexionBD().mEstateRol(uRol, "edwin.ruano", ref error);
        }

        //Consultar rol
        internal Rol QueryRol(Rol uRol, ref string error)
        {
            var tabla = new ConexionBD().mQueryRol(uRol, ref error);

            uRol = (from query in tabla.AsEnumerable()
                    select new Rol
                    {
                        nombreRol = query.Field<string>("NombreRol")
                    }).FirstOrDefault();
            return uRol;
        }

        //Crear permiso
        internal void CreatePermiso(Permiso permit, ref string error)
        {
            new ConexionBD().mCreatePermiso(permit, "edwin.ruano", ref error);
        }

        //Modificar permiso
        internal void UpdatePermiso(Permiso permit, ref string error)
        {
            new ConexionBD().mUpdatePermiso(permit, "edwin.ruano", ref error);
        }

        //Alta/Baja permiso
        internal void UpDownPermiso(Permiso permit, ref string error)
        {
            new ConexionBD().mEstatePermiso(permit, "edwin.ruano", ref error);
        }

        //Consultar Permiso
        internal Permiso QueryPermiso(Permiso permit, ref string error)
        {
            var tabla = new ConexionBD().mQueryPermiso(permit, ref error);

            permit = (from query in tabla.AsEnumerable()
                    select new Permiso
                    {
                        nombrePermiso = query.Field<string>("NombrePermiso")
                    }).FirstOrDefault();
            return permit;
        }

        //Reiniciar contraseñas
        internal void RestartPassword(ReinicioContraseña password, ref string error)
        {
            new ConexionBD().mRestartPassword(password, "edwin.ruano", ref error);
        }
    }
}